#Generated by Kickstart Configurator
#platform=x86

#System language
lang en_US
#Language modules to install
langsupport de_DE --default=en_US
#System keyboard
keyboard de
#System mouse
mouse
#System timezone
timezone Europe/Berlin
#Root password
rootpw --iscrypted sawVsPPn2.KXM
#Initial user
user robot-local --fullname "robot-local" --iscrypted --password $1$B.HZ0G5H$S5mK3hxXZYEoHCKmADvWx.
#Reboot after installation
reboot
#Use text mode install
text
#Install OS instead of upgrade
install
#Use CDROM installation media
cdrom
#System bootloader configuration
bootloader --location=mbr 
#Clear the Master Boot Record
zerombr yes
#Partition clearing information
clearpart --all --initlabel 
#Disk partitioning information

################ PARTITION################ 
clearpart --all --initlabel
part /boot --fstype ext4 --size 200 --asprimary
part swap --size 1024
part pv.01 --size 1 --grow
volgroup rootvg pv.01
logvol / --fstype ext4 --vgname=rootvg --size=1 --grow --name=rootvol
# needed to answer the 'do you want to write changes to disk"
preseed partman-lvm/confirm_nooverwrite boolean true

# needed to answer the question about not having a separate /boot
preseed partman-auto-lvm/no_boot boolean true

#System authorization infomation
auth  --useshadow  --enablemd5 
#Network information
network --bootproto=dhcp --device=eth0
#Firewall configuration
firewall --disabled
#Do not configure the X Window System
skipx

################ PACKAGES ################ 
# Additional packages to install.
%packages
vim
gnome
tree
gitg
git-gui
meld
openjdk-6-jdk
zsh
terminator
language-pack-de
language-pack-en
ipython
ubuntu-desktop
openssh-client
openssh-server

################!! PRE-INSTALLATION !!################ 
%pre --interpreter=/bin/sh
#!/bin/bash
################ Request for hostname ################ 
exec < /dev/tty6 > /dev/tty6 2>&1
chvt 6
echo "#######################################"
echo "# Running Pre Configuration for slave #"
echo "#######################################"
echo -n "Enter the name of the machine (hostname): "
read hostn
hostname $hostn
echo "You have chosen $hostn. Press enter to continue or Ctrl Alt Del to restart"
read
###Go back to tty1##
exec < /dev/tty1 > /dev/tty1
chvt 1
%end

  
################!! POST-INSTALLATION !!################ 
apt-get upgrade -y --force-yes

################ SETUP GRUB ################ 
%post --interpreter=/bin/bash
#!/bin/bash
if grep -q GRUB_RECORDFAIL_TIMEOUT= /etc/default/grub ; then
echo "found GRUB_RECORD_FAIL flag already, skipping update-grub call"
else
echo "GRUB_RECORDFAIL_TIMEOUT=10" >> /etc/default/grub
update-grub
fi
%end

################ UPGRADE KERNEL ################ 
%post --interpreter=/bin/bash
apt-get install --install-recommends linux-generic-lts-xenial -y --force-yes
%end

################ INSTALL GRAPHICAL INTERFACE ################ 
%post --interpreter=/bin/bash
apt-get install lightdm -y -f
dpkg-reconfigure lightdm
%end

################ ADD USERS ################ 
%post --interpreter /bin/bash
echo "::Adding users and groups ::"

################ ROBOT-LOCAL USER ################ 
sed -i 's/HOME=/home/HOME=/iscsi/user/g' /etc/default/useradd
adduser --disabled-password --gecos "" robot-local --home /home/robot-local
echo "robot-local:sawVsPPn2.KXM"  | chpasswd -e
cp -rT /etc/skel /home/robot-local #to populate /home/robot-local with default files and folders
chown robot-local:robot-local /home/robot-local

################ SETUP ROOT USER ################ 
%post
echo "Defaults rootpw" >> /etc/sudoers
passwd root --iscrypted sawVsPPn2.KXM
%end

################ GIVE ROBOT-LOCAL AND ROBOT USERS FULL RIGHTS ################ 
%post
echo "robot-local ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
echo "robot ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
%end

################ KEYBOARD LAYOUT ################ 
%post --interpreter=/bin/bash 
L='de' && sed -i 's/XKBLAYOUT=\"\w*"/XKBLAYOUT=\"'$L'\"/g' /etc/default/keyboard
apt-get install console-data -y -f
dpkg-reconfigure keyboard-configuration
%end

################ NFS SETUP ################ 
%post --interpreter /bin/bash
sleep 5
apt-get install nfs-kernel-server autofs -y -f
HOSTNAME=$(cat /etc/hostname)

SERVERNAME=$(echo ${HOSTNAME%-*}-b1)
echo $SERVERNAME
touch /etc/auto.direct

echo "/u  -fstype=nfs4    $SERVERNAME:/" >> /etc/auto.direct
update-rc.d autofs defaults
service autofs restart
modprobe nfs

echo "/-  /etc/auto.direct" >> /etc/auto.master
ping -c 1 -w 3 $SERVERNAME
if [ $? -ne 0 ] ; then
echo -e "\n${red}ERROR:Server $SERVERNAME unreachable ${NC}\n"
exit
fi
sed -i 's/NEED_STADT\=/NEED_STADT\=yes/g' /etc/default/nfs-common
update-rc.d autofs defaults
service autofs restart
modprobe nfs
{ rm /etc/default/nfs-common && awk '/^NEED_STATD=/ {sub(/\=/,"=yes")}1' > /etc/default/nfs-common; } < /etc/default/nfs-common 
%end

################ NTP SETUP ################ 
%post --interpreter /bin/bash
wget -O /etc/ntp.conf https://raw.githubusercontent.com/ipa320/setup_cob4/master/cob-pcs/ntp_client
HOSTNAME=$(cat /etc/hostname)
SERVERNAME=$(echo ${HOSTNAME%-*}-b1)
echo $SERVERNAME
sed -i "s/server_ip/${SERVERNAME}/g" /etc/ntp.conf
%end

################ CONFIGURE SSH ################ 
%post --interpreter /bin/bash
echo "X11Forwarding yes" >> /etc/ssh/sshd_config
echo "X11UseLocalhost no" >> /etc/ssh/sshd_config
echo "PermitRootLogin yes">> /etc/ssh/sshd_config
echo "ClientAliveInterval 60" >> /etc/ssh/sshd_config
sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/g' /etc/ssh/sshd_config
/etc/init.d/ssh restart
%end

################ SETUP UDEV RULES ################ 
%post --interpreter=/bin/bash
wget -O /etc/udev/rules.d/98-led.rules https://raw.githubusercontent.com/ipa320/setup_cob4/master/udev_rules/98-led.rules 
wget -O /etc/udev/rules.d/99-gripper.rules https://raw.githubusercontent.com/ipa320/setup_cob4/master/udev_rules/99-gripper.rules 
%end

################ INSTALLING ROS ################ 
%post --interpreter=/bin/bash
#!/bin/bash
sh -c 'echo "deb http://packages.ros.org/ros/ubuntu trusty main" >> /etc/apt/sources.list.d/ros-latest.list'
wget http://packages.ros.org/ros.key -O - | apt-key add - 
apt-get update
apt-get install ros-indigo-roscpp -y
apt-get install ros-indigo-rosbash -y
apt-get install ros-indigo-ros -y
apt-get install ros-indigo-care-o-bot-robot -y
%end

################ SETUP DEFAULT BASH ENVIROMENT ################ 
%post --interpreter=/bin/bash
ROBOT=$(echo ${HOSTNAME%-*})

if [[ "$HOSTNAME" == "$ROBOT-t"* ]]
then
wget -O /etc/cob.bash.bashrc https://raw.githubusercontent.com/ipa320/setup_cob4/master/cob-pcs/cob.bash.bashrc.t
fi

if [[ "$HOSTNAME" == "$ROBOT-h"* ]]
then
wget -O /etc/cob.bash.bashrc https://raw.githubusercontent.com/ipa320/setup_cob4/master/cob-pcs/cob.bash.bashrc.h
fi

if [[ "$HOSTNAME" == "$ROBOT-s"* ]]
then
wget -O /etc/cob.bash.bashrc https://raw.githubusercontent.com/ipa320/setup_cob4/master/cob-pcs/cob.bash.bashrc.s 
fi
%end

################ NETWORK SETUP ################ 
%post --interpreter=/bin/bash --logfile /root/ks-post.log
apt-get -y remove biosdevname -y --force-yes
update-initramfs -u
update-grub

(
  wget -O /etc/network/interfaces https://raw.githubusercontent.com/ipa320/setup_cob4/master/cob-pcs/networkInterfacesB1
) 2>&1 | /usr/bin/tee /root/post-install.log
chvt 1
touch /etc/network/interfaces.orig
cp /etc/network/interfaces /etc/network/interfaces.orig
echo "mv /etc/network/interfaces.orig /etc/network/interfaces && ifup -a && sed -i '/fixnet.sh/d' /etc/rc.local && rm -f /fixnet.sh" > /fixnet.sh
sed -i '/exit 0/ibash /fixnet.sh' /etc/rc.local
wget -O /etc/network/interfaces https://raw.githubusercontent.com/ipa320/setup_cob4/master/cob-pcs/networkInterfacesT1
/etc/init.d/networking restart
%end

################ INSTALL CANDUMP TOOLS ################ 
%post
initctl stop candump2mongodb
rm /etc/init/candump2mongodb.conf
wget -O /usr/local/bin/socket_buffer.py https://raw.githubusercontent.com/ipa320/setup_cob4/master/scripts/socket_buffer.py
chmod +x /usr/local/bin/socket_buffer.py
#wget -O /etc/init/candump_any.conf https://raw.githubusercontent.com/ipa320/setup_cob4/master/scripts/candump_any.conf
#initctl start candump_any
%end

################ INSTALL NOMACHINE ################ 
%post
apt-get install pulseaudio -y
wget -O /root/nomachine_5.3.9_6_amd64.deb http://download.nomachine.com/download/5.3/Linux/nomachine_5.3.9_6_amd64.deb
dpkg -i /root/nomachine_5.3.9_6_amd64.deb
%end

################ INSTALL NETDATA TOOLS ################ 
%post --interpreter /bin/bash
apt-get install zlib1g-dev uuid-dev libmnl-dev gcc make git autoconf autoconf-archive autogen automake pkg-config curl -y
git clone https://github.com/firehol/netdata.git --depth=1 /root/netdata
cd /root/netdata
yes | ./netdata-installer.sh
%end
